{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { DisplayServiceService } from '../services/display-service.service';\nimport { ActivatedRoute } from '@angular/router';\nlet ModifyDoctorComponent = class ModifyDoctorComponent {\n  constructor(service, route) {\n    this.service = service;\n    this.route = route;\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.id = params.id;\n    });\n  }\n\n  onSubmit() {\n    this.service.modifyDoctor({\n      prenom: this.firstName,\n      nom: this.name,\n      specialite: this.speciality,\n      anneesExperience: this.years,\n      idService: 1\n    }, this.id);\n  }\n\n};\nModifyDoctorComponent = __decorate([Component({\n  selector: 'app-modify-doctor',\n  templateUrl: './modify-doctor.component.html',\n  styleUrls: ['./modify-doctor.component.css']\n}), __metadata(\"design:paramtypes\", [DisplayServiceService, ActivatedRoute])], ModifyDoctorComponent);\nexport { ModifyDoctorComponent };","map":null,"metadata":{},"sourceType":"module"}